name: Deploy App on Scaleway

on:
  push:
    branches: [main]

jobs:
  audit-back:
    name: Audit Backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: npm install
        working-directory: ./back
      - run: npm audit --audit-level=moderate
        working-directory: ./back

  audit-front:
    name: Audit Frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies (with legacy peer deps)
        run: npm install --legacy-peer-deps
        working-directory: ./front
      - name: Audit for high and critical vulnerabilities only
        run: npm audit --audit-level=high || true
        working-directory: ./front

  build-and-push:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    needs: [audit-back, audit-front]
    steps:
      - uses: actions/checkout@v4

      - name: Generate version tag
        id: tag
        run: echo "TAG=v$(date +%Y%m%d)-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Login to Scaleway Registry
        run: echo "${{ secrets.SCW_SECRET_KEY }}" | docker login rg.fr-par.scw.cloud -u "${{ secrets.SCW_ACCESS_KEY }}" --password-stdin

      - name: Build and push backend
        run: |
          docker build -t rg.fr-par.scw.cloud/namespace-laldy-adan/devops-dev-api:${{ steps.tag.outputs.TAG }} ./back
          docker push rg.fr-par.scw.cloud/namespace-laldy-adan/devops-dev-api:${{ steps.tag.outputs.TAG }}

      - name: Prepare .env for frontend
        run: echo "VITE_API_URL=https://devops-dev-api.example.com" > front/.env.production

      - name: Build and push frontend
        run: |
          docker build -t rg.fr-par.scw.cloud/namespace-laldy-adan/devops-dev-web:${{ steps.tag.outputs.TAG }} ./front
          docker push rg.fr-par.scw.cloud/namespace-laldy-adan/devops-dev-web:${{ steps.tag.outputs.TAG }}

  deploy:
    name: Deploy to Scaleway Containers
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - uses: actions/checkout@v4

      - name: Install Scaleway CLI
        run: |
          curl -fsSL https://github.com/scaleway/scaleway-cli/releases/download/v2.16.0/scaleway-cli_2.16.0_linux_amd64 -o scw
          chmod +x scw
          sudo mv scw /usr/local/bin/scw
          sudo apt-get install -y jq

      - name: Configure Scaleway CLI
        env:
          SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
          SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
          SCW_PROJECT_ID: ${{ secrets.SCW_PROJECT_ID }}
        run: |
          scw config init \
            --access-key "$SCW_ACCESS_KEY" \
            --secret-key "$SCW_SECRET_KEY" \
            --project-id "$SCW_PROJECT_ID" \
            --region fr-par
    

      - name: Load build tag
        id: load-tag
        run: echo "TAG=v$(date +%Y%m%d)-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Update Backend Container
        env:
          NAMESPACE_ID: ${{ secrets.SCALEWAY_NAMESPACE_ID }}
        run: |
          CONTAINER_ID=$(scw container container list name=devops-dev-api namespace-id=$NAMESPACE_ID --output json | jq -r '.[0].id // empty')
          if [ -n "$CONTAINER_ID" ]; then
            scw container container update "$CONTAINER_ID" \
              registry-image=rg.fr-par.scw.cloud/namespace-laldy-adan/devops-dev-api:${{ steps.load-tag.outputs.TAG }}
            scw container container redeploy "$CONTAINER_ID"
          fi

      - name: Update Frontend Container
        env:
          NAMESPACE_ID: ${{ secrets.SCALEWAY_NAMESPACE_ID }}
        run: |
          CONTAINER_ID=$(scw container container list name=devops-dev-web namespace-id=$NAMESPACE_ID --output json | jq -r '.[0].id // empty')
          if [ -n "$CONTAINER_ID" ]; then
            scw container container update "$CONTAINER_ID" \
              registry-image=rg.fr-par.scw.cloud/namespace-laldy-adan/devops-dev-web:${{ steps.load-tag.outputs.TAG }}
            scw container container redeploy "$CONTAINER_ID"
          fi
